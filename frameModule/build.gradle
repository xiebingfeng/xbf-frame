apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: './nexus.gradle'

kapt {
    androidExtensions {
        experimental = true
    }
}

android {

    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    resourcePrefix "frame_"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //test
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"

//    if (rootProject.localDebug) {
//        api project(':xbfframe:sizeModule')
//    } else {
    api project(':sizeModule')
//    }


    //google
    api "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    api "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:design:$rootProject.supportLibraryVersion"
    api "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    api "com.android.support:support-annotations:$rootProject.supportLibraryVersion"

    //kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    api 'org.jetbrains.anko:anko-sdk15:0.10.4'

    // 内存检测工具
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    api 'com.github.xiebingfeng:xbf-blockcanary:1.0.0'

    //rx Permission
    api 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'

    //rx Java
    api 'io.reactivex.rxjava2:rxandroid:2.1.0'
    api 'io.reactivex:rxkotlin:1.0.0'

    //crashReport
    api 'com.tencent.bugly:crashreport:2.6.6'

    //lifecycle
    api 'android.arch.lifecycle:extensions:1.1.1'
    api 'android.arch.lifecycle:runtime:1.1.1'

    //log框架
    api 'com.orhanobut:logger:2.2.0'

    //fragmentation
    api 'me.yokeyword:fragmentation:1.3.6'
    api 'me.yokeyword:fragmentation-swipeback:1.3.6'

    //适配方案
    api 'me.jessyan:autosize:1.1.2'

    // eventBus
    api 'org.greenrobot:eventbus:3.1.1'

    //dialog
    api 'com.afollestad.material-dialogs:core:2.0.0-alpha12'

    //adapter
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'

    //arouter
    api 'com.alibaba:arouter-api:1.4.1'

    // 网络请求
    api 'com.github.xiebingfeng:xbf-okgo:1.0.3'

    //AndroidUtilCode
    api 'com.blankj:utilcode:1.22.3'

    //Luban图片压缩
    api 'top.zibin:Luban:1.1.8'

    //glide
    api "com.github.bumptech.glide:glide:4.8.0"
    kapt 'com.github.bumptech.glide:compiler:4.8.0'
    api 'com.github.bumptech.glide:okhttp3-integration:4.8.0'

    //db
    api 'android.arch.persistence.room:runtime:1.1.1'
}